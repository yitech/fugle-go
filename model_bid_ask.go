/*
FastAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fugle-go

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the BidAsk type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BidAsk{}

// BidAsk struct for BidAsk
type BidAsk struct {
	Price float32 `json:"price"`
	Size int32 `json:"size"`
}

type _BidAsk BidAsk

// NewBidAsk instantiates a new BidAsk object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBidAsk(price float32, size int32) *BidAsk {
	this := BidAsk{}
	this.Price = price
	this.Size = size
	return &this
}

// NewBidAskWithDefaults instantiates a new BidAsk object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBidAskWithDefaults() *BidAsk {
	this := BidAsk{}
	return &this
}

// GetPrice returns the Price field value
func (o *BidAsk) GetPrice() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Price
}

// GetPriceOk returns a tuple with the Price field value
// and a boolean to check if the value has been set.
func (o *BidAsk) GetPriceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Price, true
}

// SetPrice sets field value
func (o *BidAsk) SetPrice(v float32) {
	o.Price = v
}

// GetSize returns the Size field value
func (o *BidAsk) GetSize() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Size
}

// GetSizeOk returns a tuple with the Size field value
// and a boolean to check if the value has been set.
func (o *BidAsk) GetSizeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Size, true
}

// SetSize sets field value
func (o *BidAsk) SetSize(v int32) {
	o.Size = v
}

func (o BidAsk) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BidAsk) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["price"] = o.Price
	toSerialize["size"] = o.Size
	return toSerialize, nil
}

func (o *BidAsk) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"price",
		"size",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBidAsk := _BidAsk{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBidAsk)

	if err != nil {
		return err
	}

	*o = BidAsk(varBidAsk)

	return err
}

type NullableBidAsk struct {
	value *BidAsk
	isSet bool
}

func (v NullableBidAsk) Get() *BidAsk {
	return v.value
}

func (v *NullableBidAsk) Set(val *BidAsk) {
	v.value = val
	v.isSet = true
}

func (v NullableBidAsk) IsSet() bool {
	return v.isSet
}

func (v *NullableBidAsk) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBidAsk(val *BidAsk) *NullableBidAsk {
	return &NullableBidAsk{value: val, isSet: true}
}

func (v NullableBidAsk) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBidAsk) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


