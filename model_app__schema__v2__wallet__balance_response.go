/*
FastAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fuglego

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AppSchemaV2WalletBalanceResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppSchemaV2WalletBalanceResponse{}

// AppSchemaV2WalletBalanceResponse struct for AppSchemaV2WalletBalanceResponse
type AppSchemaV2WalletBalanceResponse struct {
	Available int32 `json:"available"`
	Locked int32 `json:"locked"`
}

type _AppSchemaV2WalletBalanceResponse AppSchemaV2WalletBalanceResponse

// NewAppSchemaV2WalletBalanceResponse instantiates a new AppSchemaV2WalletBalanceResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppSchemaV2WalletBalanceResponse(available int32, locked int32) *AppSchemaV2WalletBalanceResponse {
	this := AppSchemaV2WalletBalanceResponse{}
	this.Available = available
	this.Locked = locked
	return &this
}

// NewAppSchemaV2WalletBalanceResponseWithDefaults instantiates a new AppSchemaV2WalletBalanceResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppSchemaV2WalletBalanceResponseWithDefaults() *AppSchemaV2WalletBalanceResponse {
	this := AppSchemaV2WalletBalanceResponse{}
	return &this
}

// GetAvailable returns the Available field value
func (o *AppSchemaV2WalletBalanceResponse) GetAvailable() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Available
}

// GetAvailableOk returns a tuple with the Available field value
// and a boolean to check if the value has been set.
func (o *AppSchemaV2WalletBalanceResponse) GetAvailableOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Available, true
}

// SetAvailable sets field value
func (o *AppSchemaV2WalletBalanceResponse) SetAvailable(v int32) {
	o.Available = v
}

// GetLocked returns the Locked field value
func (o *AppSchemaV2WalletBalanceResponse) GetLocked() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Locked
}

// GetLockedOk returns a tuple with the Locked field value
// and a boolean to check if the value has been set.
func (o *AppSchemaV2WalletBalanceResponse) GetLockedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Locked, true
}

// SetLocked sets field value
func (o *AppSchemaV2WalletBalanceResponse) SetLocked(v int32) {
	o.Locked = v
}

func (o AppSchemaV2WalletBalanceResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppSchemaV2WalletBalanceResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["available"] = o.Available
	toSerialize["locked"] = o.Locked
	return toSerialize, nil
}

func (o *AppSchemaV2WalletBalanceResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"available",
		"locked",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAppSchemaV2WalletBalanceResponse := _AppSchemaV2WalletBalanceResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAppSchemaV2WalletBalanceResponse)

	if err != nil {
		return err
	}

	*o = AppSchemaV2WalletBalanceResponse(varAppSchemaV2WalletBalanceResponse)

	return err
}

type NullableAppSchemaV2WalletBalanceResponse struct {
	value *AppSchemaV2WalletBalanceResponse
	isSet bool
}

func (v NullableAppSchemaV2WalletBalanceResponse) Get() *AppSchemaV2WalletBalanceResponse {
	return v.value
}

func (v *NullableAppSchemaV2WalletBalanceResponse) Set(val *AppSchemaV2WalletBalanceResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAppSchemaV2WalletBalanceResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAppSchemaV2WalletBalanceResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppSchemaV2WalletBalanceResponse(val *AppSchemaV2WalletBalanceResponse) *NullableAppSchemaV2WalletBalanceResponse {
	return &NullableAppSchemaV2WalletBalanceResponse{value: val, isSet: true}
}

func (v NullableAppSchemaV2WalletBalanceResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppSchemaV2WalletBalanceResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


