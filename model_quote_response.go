/*
FastAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fugle-go

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the QuoteResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QuoteResponse{}

// QuoteResponse struct for QuoteResponse
type QuoteResponse struct {
	Date string `json:"date"`
	Type string `json:"type"`
	Exchange string `json:"exchange"`
	Market string `json:"market"`
	Symbol string `json:"symbol"`
	Name string `json:"name"`
	ReferencePrice float32 `json:"referencePrice"`
	PreviousClose float32 `json:"previousClose"`
	OpenPrice float32 `json:"openPrice"`
	OpenTime int32 `json:"openTime"`
	HighPrice float32 `json:"highPrice"`
	HighTime int32 `json:"highTime"`
	LowPrice float32 `json:"lowPrice"`
	LowTime int32 `json:"lowTime"`
	ClosePrice float32 `json:"closePrice"`
	CloseTime int32 `json:"closeTime"`
	AvgPrice float32 `json:"avgPrice"`
	Change float32 `json:"change"`
	ChangePercent float32 `json:"changePercent"`
	Amplitude float32 `json:"amplitude"`
	LastPrice float32 `json:"lastPrice"`
	LastSize int32 `json:"lastSize"`
	Bids []BidAsk `json:"bids"`
	Asks []BidAsk `json:"asks"`
	Total Total `json:"total"`
	LastTrade LastTrade `json:"lastTrade"`
	LastTrial LastTrial `json:"lastTrial"`
	IsTrial *bool `json:"isTrial,omitempty"`
	IsDelayedOpen *bool `json:"isDelayedOpen,omitempty"`
	IsDelayedClose *bool `json:"isDelayedClose,omitempty"`
	IsOpen *bool `json:"isOpen,omitempty"`
	IsClose *bool `json:"isClose,omitempty"`
	LastUpdated int32 `json:"lastUpdated"`
	Serial int32 `json:"serial"`
}

type _QuoteResponse QuoteResponse

// NewQuoteResponse instantiates a new QuoteResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuoteResponse(date string, type_ string, exchange string, market string, symbol string, name string, referencePrice float32, previousClose float32, openPrice float32, openTime int32, highPrice float32, highTime int32, lowPrice float32, lowTime int32, closePrice float32, closeTime int32, avgPrice float32, change float32, changePercent float32, amplitude float32, lastPrice float32, lastSize int32, bids []BidAsk, asks []BidAsk, total Total, lastTrade LastTrade, lastTrial LastTrial, lastUpdated int32, serial int32) *QuoteResponse {
	this := QuoteResponse{}
	this.Date = date
	this.Type = type_
	this.Exchange = exchange
	this.Market = market
	this.Symbol = symbol
	this.Name = name
	this.ReferencePrice = referencePrice
	this.PreviousClose = previousClose
	this.OpenPrice = openPrice
	this.OpenTime = openTime
	this.HighPrice = highPrice
	this.HighTime = highTime
	this.LowPrice = lowPrice
	this.LowTime = lowTime
	this.ClosePrice = closePrice
	this.CloseTime = closeTime
	this.AvgPrice = avgPrice
	this.Change = change
	this.ChangePercent = changePercent
	this.Amplitude = amplitude
	this.LastPrice = lastPrice
	this.LastSize = lastSize
	this.Bids = bids
	this.Asks = asks
	this.Total = total
	this.LastTrade = lastTrade
	this.LastTrial = lastTrial
	this.LastUpdated = lastUpdated
	this.Serial = serial
	return &this
}

// NewQuoteResponseWithDefaults instantiates a new QuoteResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuoteResponseWithDefaults() *QuoteResponse {
	this := QuoteResponse{}
	return &this
}

// GetDate returns the Date field value
func (o *QuoteResponse) GetDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Date
}

// GetDateOk returns a tuple with the Date field value
// and a boolean to check if the value has been set.
func (o *QuoteResponse) GetDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Date, true
}

// SetDate sets field value
func (o *QuoteResponse) SetDate(v string) {
	o.Date = v
}

// GetType returns the Type field value
func (o *QuoteResponse) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *QuoteResponse) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *QuoteResponse) SetType(v string) {
	o.Type = v
}

// GetExchange returns the Exchange field value
func (o *QuoteResponse) GetExchange() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Exchange
}

// GetExchangeOk returns a tuple with the Exchange field value
// and a boolean to check if the value has been set.
func (o *QuoteResponse) GetExchangeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Exchange, true
}

// SetExchange sets field value
func (o *QuoteResponse) SetExchange(v string) {
	o.Exchange = v
}

// GetMarket returns the Market field value
func (o *QuoteResponse) GetMarket() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Market
}

// GetMarketOk returns a tuple with the Market field value
// and a boolean to check if the value has been set.
func (o *QuoteResponse) GetMarketOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Market, true
}

// SetMarket sets field value
func (o *QuoteResponse) SetMarket(v string) {
	o.Market = v
}

// GetSymbol returns the Symbol field value
func (o *QuoteResponse) GetSymbol() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Symbol
}

// GetSymbolOk returns a tuple with the Symbol field value
// and a boolean to check if the value has been set.
func (o *QuoteResponse) GetSymbolOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Symbol, true
}

// SetSymbol sets field value
func (o *QuoteResponse) SetSymbol(v string) {
	o.Symbol = v
}

// GetName returns the Name field value
func (o *QuoteResponse) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *QuoteResponse) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *QuoteResponse) SetName(v string) {
	o.Name = v
}

// GetReferencePrice returns the ReferencePrice field value
func (o *QuoteResponse) GetReferencePrice() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.ReferencePrice
}

// GetReferencePriceOk returns a tuple with the ReferencePrice field value
// and a boolean to check if the value has been set.
func (o *QuoteResponse) GetReferencePriceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReferencePrice, true
}

// SetReferencePrice sets field value
func (o *QuoteResponse) SetReferencePrice(v float32) {
	o.ReferencePrice = v
}

// GetPreviousClose returns the PreviousClose field value
func (o *QuoteResponse) GetPreviousClose() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.PreviousClose
}

// GetPreviousCloseOk returns a tuple with the PreviousClose field value
// and a boolean to check if the value has been set.
func (o *QuoteResponse) GetPreviousCloseOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PreviousClose, true
}

// SetPreviousClose sets field value
func (o *QuoteResponse) SetPreviousClose(v float32) {
	o.PreviousClose = v
}

// GetOpenPrice returns the OpenPrice field value
func (o *QuoteResponse) GetOpenPrice() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.OpenPrice
}

// GetOpenPriceOk returns a tuple with the OpenPrice field value
// and a boolean to check if the value has been set.
func (o *QuoteResponse) GetOpenPriceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OpenPrice, true
}

// SetOpenPrice sets field value
func (o *QuoteResponse) SetOpenPrice(v float32) {
	o.OpenPrice = v
}

// GetOpenTime returns the OpenTime field value
func (o *QuoteResponse) GetOpenTime() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.OpenTime
}

// GetOpenTimeOk returns a tuple with the OpenTime field value
// and a boolean to check if the value has been set.
func (o *QuoteResponse) GetOpenTimeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OpenTime, true
}

// SetOpenTime sets field value
func (o *QuoteResponse) SetOpenTime(v int32) {
	o.OpenTime = v
}

// GetHighPrice returns the HighPrice field value
func (o *QuoteResponse) GetHighPrice() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.HighPrice
}

// GetHighPriceOk returns a tuple with the HighPrice field value
// and a boolean to check if the value has been set.
func (o *QuoteResponse) GetHighPriceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HighPrice, true
}

// SetHighPrice sets field value
func (o *QuoteResponse) SetHighPrice(v float32) {
	o.HighPrice = v
}

// GetHighTime returns the HighTime field value
func (o *QuoteResponse) GetHighTime() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.HighTime
}

// GetHighTimeOk returns a tuple with the HighTime field value
// and a boolean to check if the value has been set.
func (o *QuoteResponse) GetHighTimeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HighTime, true
}

// SetHighTime sets field value
func (o *QuoteResponse) SetHighTime(v int32) {
	o.HighTime = v
}

// GetLowPrice returns the LowPrice field value
func (o *QuoteResponse) GetLowPrice() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.LowPrice
}

// GetLowPriceOk returns a tuple with the LowPrice field value
// and a boolean to check if the value has been set.
func (o *QuoteResponse) GetLowPriceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LowPrice, true
}

// SetLowPrice sets field value
func (o *QuoteResponse) SetLowPrice(v float32) {
	o.LowPrice = v
}

// GetLowTime returns the LowTime field value
func (o *QuoteResponse) GetLowTime() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.LowTime
}

// GetLowTimeOk returns a tuple with the LowTime field value
// and a boolean to check if the value has been set.
func (o *QuoteResponse) GetLowTimeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LowTime, true
}

// SetLowTime sets field value
func (o *QuoteResponse) SetLowTime(v int32) {
	o.LowTime = v
}

// GetClosePrice returns the ClosePrice field value
func (o *QuoteResponse) GetClosePrice() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.ClosePrice
}

// GetClosePriceOk returns a tuple with the ClosePrice field value
// and a boolean to check if the value has been set.
func (o *QuoteResponse) GetClosePriceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClosePrice, true
}

// SetClosePrice sets field value
func (o *QuoteResponse) SetClosePrice(v float32) {
	o.ClosePrice = v
}

// GetCloseTime returns the CloseTime field value
func (o *QuoteResponse) GetCloseTime() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CloseTime
}

// GetCloseTimeOk returns a tuple with the CloseTime field value
// and a boolean to check if the value has been set.
func (o *QuoteResponse) GetCloseTimeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CloseTime, true
}

// SetCloseTime sets field value
func (o *QuoteResponse) SetCloseTime(v int32) {
	o.CloseTime = v
}

// GetAvgPrice returns the AvgPrice field value
func (o *QuoteResponse) GetAvgPrice() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.AvgPrice
}

// GetAvgPriceOk returns a tuple with the AvgPrice field value
// and a boolean to check if the value has been set.
func (o *QuoteResponse) GetAvgPriceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AvgPrice, true
}

// SetAvgPrice sets field value
func (o *QuoteResponse) SetAvgPrice(v float32) {
	o.AvgPrice = v
}

// GetChange returns the Change field value
func (o *QuoteResponse) GetChange() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Change
}

// GetChangeOk returns a tuple with the Change field value
// and a boolean to check if the value has been set.
func (o *QuoteResponse) GetChangeOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Change, true
}

// SetChange sets field value
func (o *QuoteResponse) SetChange(v float32) {
	o.Change = v
}

// GetChangePercent returns the ChangePercent field value
func (o *QuoteResponse) GetChangePercent() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.ChangePercent
}

// GetChangePercentOk returns a tuple with the ChangePercent field value
// and a boolean to check if the value has been set.
func (o *QuoteResponse) GetChangePercentOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChangePercent, true
}

// SetChangePercent sets field value
func (o *QuoteResponse) SetChangePercent(v float32) {
	o.ChangePercent = v
}

// GetAmplitude returns the Amplitude field value
func (o *QuoteResponse) GetAmplitude() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Amplitude
}

// GetAmplitudeOk returns a tuple with the Amplitude field value
// and a boolean to check if the value has been set.
func (o *QuoteResponse) GetAmplitudeOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amplitude, true
}

// SetAmplitude sets field value
func (o *QuoteResponse) SetAmplitude(v float32) {
	o.Amplitude = v
}

// GetLastPrice returns the LastPrice field value
func (o *QuoteResponse) GetLastPrice() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.LastPrice
}

// GetLastPriceOk returns a tuple with the LastPrice field value
// and a boolean to check if the value has been set.
func (o *QuoteResponse) GetLastPriceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastPrice, true
}

// SetLastPrice sets field value
func (o *QuoteResponse) SetLastPrice(v float32) {
	o.LastPrice = v
}

// GetLastSize returns the LastSize field value
func (o *QuoteResponse) GetLastSize() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.LastSize
}

// GetLastSizeOk returns a tuple with the LastSize field value
// and a boolean to check if the value has been set.
func (o *QuoteResponse) GetLastSizeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastSize, true
}

// SetLastSize sets field value
func (o *QuoteResponse) SetLastSize(v int32) {
	o.LastSize = v
}

// GetBids returns the Bids field value
func (o *QuoteResponse) GetBids() []BidAsk {
	if o == nil {
		var ret []BidAsk
		return ret
	}

	return o.Bids
}

// GetBidsOk returns a tuple with the Bids field value
// and a boolean to check if the value has been set.
func (o *QuoteResponse) GetBidsOk() ([]BidAsk, bool) {
	if o == nil {
		return nil, false
	}
	return o.Bids, true
}

// SetBids sets field value
func (o *QuoteResponse) SetBids(v []BidAsk) {
	o.Bids = v
}

// GetAsks returns the Asks field value
func (o *QuoteResponse) GetAsks() []BidAsk {
	if o == nil {
		var ret []BidAsk
		return ret
	}

	return o.Asks
}

// GetAsksOk returns a tuple with the Asks field value
// and a boolean to check if the value has been set.
func (o *QuoteResponse) GetAsksOk() ([]BidAsk, bool) {
	if o == nil {
		return nil, false
	}
	return o.Asks, true
}

// SetAsks sets field value
func (o *QuoteResponse) SetAsks(v []BidAsk) {
	o.Asks = v
}

// GetTotal returns the Total field value
func (o *QuoteResponse) GetTotal() Total {
	if o == nil {
		var ret Total
		return ret
	}

	return o.Total
}

// GetTotalOk returns a tuple with the Total field value
// and a boolean to check if the value has been set.
func (o *QuoteResponse) GetTotalOk() (*Total, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Total, true
}

// SetTotal sets field value
func (o *QuoteResponse) SetTotal(v Total) {
	o.Total = v
}

// GetLastTrade returns the LastTrade field value
func (o *QuoteResponse) GetLastTrade() LastTrade {
	if o == nil {
		var ret LastTrade
		return ret
	}

	return o.LastTrade
}

// GetLastTradeOk returns a tuple with the LastTrade field value
// and a boolean to check if the value has been set.
func (o *QuoteResponse) GetLastTradeOk() (*LastTrade, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastTrade, true
}

// SetLastTrade sets field value
func (o *QuoteResponse) SetLastTrade(v LastTrade) {
	o.LastTrade = v
}

// GetLastTrial returns the LastTrial field value
func (o *QuoteResponse) GetLastTrial() LastTrial {
	if o == nil {
		var ret LastTrial
		return ret
	}

	return o.LastTrial
}

// GetLastTrialOk returns a tuple with the LastTrial field value
// and a boolean to check if the value has been set.
func (o *QuoteResponse) GetLastTrialOk() (*LastTrial, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastTrial, true
}

// SetLastTrial sets field value
func (o *QuoteResponse) SetLastTrial(v LastTrial) {
	o.LastTrial = v
}

// GetIsTrial returns the IsTrial field value if set, zero value otherwise.
func (o *QuoteResponse) GetIsTrial() bool {
	if o == nil || IsNil(o.IsTrial) {
		var ret bool
		return ret
	}
	return *o.IsTrial
}

// GetIsTrialOk returns a tuple with the IsTrial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteResponse) GetIsTrialOk() (*bool, bool) {
	if o == nil || IsNil(o.IsTrial) {
		return nil, false
	}
	return o.IsTrial, true
}

// HasIsTrial returns a boolean if a field has been set.
func (o *QuoteResponse) HasIsTrial() bool {
	if o != nil && !IsNil(o.IsTrial) {
		return true
	}

	return false
}

// SetIsTrial gets a reference to the given bool and assigns it to the IsTrial field.
func (o *QuoteResponse) SetIsTrial(v bool) {
	o.IsTrial = &v
}

// GetIsDelayedOpen returns the IsDelayedOpen field value if set, zero value otherwise.
func (o *QuoteResponse) GetIsDelayedOpen() bool {
	if o == nil || IsNil(o.IsDelayedOpen) {
		var ret bool
		return ret
	}
	return *o.IsDelayedOpen
}

// GetIsDelayedOpenOk returns a tuple with the IsDelayedOpen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteResponse) GetIsDelayedOpenOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDelayedOpen) {
		return nil, false
	}
	return o.IsDelayedOpen, true
}

// HasIsDelayedOpen returns a boolean if a field has been set.
func (o *QuoteResponse) HasIsDelayedOpen() bool {
	if o != nil && !IsNil(o.IsDelayedOpen) {
		return true
	}

	return false
}

// SetIsDelayedOpen gets a reference to the given bool and assigns it to the IsDelayedOpen field.
func (o *QuoteResponse) SetIsDelayedOpen(v bool) {
	o.IsDelayedOpen = &v
}

// GetIsDelayedClose returns the IsDelayedClose field value if set, zero value otherwise.
func (o *QuoteResponse) GetIsDelayedClose() bool {
	if o == nil || IsNil(o.IsDelayedClose) {
		var ret bool
		return ret
	}
	return *o.IsDelayedClose
}

// GetIsDelayedCloseOk returns a tuple with the IsDelayedClose field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteResponse) GetIsDelayedCloseOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDelayedClose) {
		return nil, false
	}
	return o.IsDelayedClose, true
}

// HasIsDelayedClose returns a boolean if a field has been set.
func (o *QuoteResponse) HasIsDelayedClose() bool {
	if o != nil && !IsNil(o.IsDelayedClose) {
		return true
	}

	return false
}

// SetIsDelayedClose gets a reference to the given bool and assigns it to the IsDelayedClose field.
func (o *QuoteResponse) SetIsDelayedClose(v bool) {
	o.IsDelayedClose = &v
}

// GetIsOpen returns the IsOpen field value if set, zero value otherwise.
func (o *QuoteResponse) GetIsOpen() bool {
	if o == nil || IsNil(o.IsOpen) {
		var ret bool
		return ret
	}
	return *o.IsOpen
}

// GetIsOpenOk returns a tuple with the IsOpen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteResponse) GetIsOpenOk() (*bool, bool) {
	if o == nil || IsNil(o.IsOpen) {
		return nil, false
	}
	return o.IsOpen, true
}

// HasIsOpen returns a boolean if a field has been set.
func (o *QuoteResponse) HasIsOpen() bool {
	if o != nil && !IsNil(o.IsOpen) {
		return true
	}

	return false
}

// SetIsOpen gets a reference to the given bool and assigns it to the IsOpen field.
func (o *QuoteResponse) SetIsOpen(v bool) {
	o.IsOpen = &v
}

// GetIsClose returns the IsClose field value if set, zero value otherwise.
func (o *QuoteResponse) GetIsClose() bool {
	if o == nil || IsNil(o.IsClose) {
		var ret bool
		return ret
	}
	return *o.IsClose
}

// GetIsCloseOk returns a tuple with the IsClose field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteResponse) GetIsCloseOk() (*bool, bool) {
	if o == nil || IsNil(o.IsClose) {
		return nil, false
	}
	return o.IsClose, true
}

// HasIsClose returns a boolean if a field has been set.
func (o *QuoteResponse) HasIsClose() bool {
	if o != nil && !IsNil(o.IsClose) {
		return true
	}

	return false
}

// SetIsClose gets a reference to the given bool and assigns it to the IsClose field.
func (o *QuoteResponse) SetIsClose(v bool) {
	o.IsClose = &v
}

// GetLastUpdated returns the LastUpdated field value
func (o *QuoteResponse) GetLastUpdated() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value
// and a boolean to check if the value has been set.
func (o *QuoteResponse) GetLastUpdatedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastUpdated, true
}

// SetLastUpdated sets field value
func (o *QuoteResponse) SetLastUpdated(v int32) {
	o.LastUpdated = v
}

// GetSerial returns the Serial field value
func (o *QuoteResponse) GetSerial() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Serial
}

// GetSerialOk returns a tuple with the Serial field value
// and a boolean to check if the value has been set.
func (o *QuoteResponse) GetSerialOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Serial, true
}

// SetSerial sets field value
func (o *QuoteResponse) SetSerial(v int32) {
	o.Serial = v
}

func (o QuoteResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QuoteResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["date"] = o.Date
	toSerialize["type"] = o.Type
	toSerialize["exchange"] = o.Exchange
	toSerialize["market"] = o.Market
	toSerialize["symbol"] = o.Symbol
	toSerialize["name"] = o.Name
	toSerialize["referencePrice"] = o.ReferencePrice
	toSerialize["previousClose"] = o.PreviousClose
	toSerialize["openPrice"] = o.OpenPrice
	toSerialize["openTime"] = o.OpenTime
	toSerialize["highPrice"] = o.HighPrice
	toSerialize["highTime"] = o.HighTime
	toSerialize["lowPrice"] = o.LowPrice
	toSerialize["lowTime"] = o.LowTime
	toSerialize["closePrice"] = o.ClosePrice
	toSerialize["closeTime"] = o.CloseTime
	toSerialize["avgPrice"] = o.AvgPrice
	toSerialize["change"] = o.Change
	toSerialize["changePercent"] = o.ChangePercent
	toSerialize["amplitude"] = o.Amplitude
	toSerialize["lastPrice"] = o.LastPrice
	toSerialize["lastSize"] = o.LastSize
	toSerialize["bids"] = o.Bids
	toSerialize["asks"] = o.Asks
	toSerialize["total"] = o.Total
	toSerialize["lastTrade"] = o.LastTrade
	toSerialize["lastTrial"] = o.LastTrial
	if !IsNil(o.IsTrial) {
		toSerialize["isTrial"] = o.IsTrial
	}
	if !IsNil(o.IsDelayedOpen) {
		toSerialize["isDelayedOpen"] = o.IsDelayedOpen
	}
	if !IsNil(o.IsDelayedClose) {
		toSerialize["isDelayedClose"] = o.IsDelayedClose
	}
	if !IsNil(o.IsOpen) {
		toSerialize["isOpen"] = o.IsOpen
	}
	if !IsNil(o.IsClose) {
		toSerialize["isClose"] = o.IsClose
	}
	toSerialize["lastUpdated"] = o.LastUpdated
	toSerialize["serial"] = o.Serial
	return toSerialize, nil
}

func (o *QuoteResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"date",
		"type",
		"exchange",
		"market",
		"symbol",
		"name",
		"referencePrice",
		"previousClose",
		"openPrice",
		"openTime",
		"highPrice",
		"highTime",
		"lowPrice",
		"lowTime",
		"closePrice",
		"closeTime",
		"avgPrice",
		"change",
		"changePercent",
		"amplitude",
		"lastPrice",
		"lastSize",
		"bids",
		"asks",
		"total",
		"lastTrade",
		"lastTrial",
		"lastUpdated",
		"serial",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQuoteResponse := _QuoteResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varQuoteResponse)

	if err != nil {
		return err
	}

	*o = QuoteResponse(varQuoteResponse)

	return err
}

type NullableQuoteResponse struct {
	value *QuoteResponse
	isSet bool
}

func (v NullableQuoteResponse) Get() *QuoteResponse {
	return v.value
}

func (v *NullableQuoteResponse) Set(val *QuoteResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableQuoteResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableQuoteResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuoteResponse(val *QuoteResponse) *NullableQuoteResponse {
	return &NullableQuoteResponse{value: val, isSet: true}
}

func (v NullableQuoteResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuoteResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


