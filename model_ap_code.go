/*
FastAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fuglego

import (
	"encoding/json"
	"fmt"
)

// APCode the model 'APCode'
type APCode string

// List of APCode
const (
	Common APCode = "1"
	AfterMarket APCode = "2"
	Odd APCode = "3"
	Emg APCode = "4"
	IntradayOdd APCode = "5"
)

// All allowed values of APCode enum
var AllowedAPCodeEnumValues = []APCode{
	"1",
	"2",
	"3",
	"4",
	"5",
}

func (v *APCode) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := APCode(value)
	for _, existing := range AllowedAPCodeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid APCode", value)
}

// NewAPCodeFromValue returns a pointer to a valid APCode
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewAPCodeFromValue(v string) (*APCode, error) {
	ev := APCode(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for APCode: valid values are %v", v, AllowedAPCodeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v APCode) IsValid() bool {
	for _, existing := range AllowedAPCodeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to APCode value
func (v APCode) Ptr() *APCode {
	return &v
}

type NullableAPCode struct {
	value *APCode
	isSet bool
}

func (v NullableAPCode) Get() *APCode {
	return v.value
}

func (v *NullableAPCode) Set(val *APCode) {
	v.value = val
	v.isSet = true
}

func (v NullableAPCode) IsSet() bool {
	return v.isSet
}

func (v *NullableAPCode) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAPCode(val *APCode) *NullableAPCode {
	return &NullableAPCode{value: val, isSet: true}
}

func (v NullableAPCode) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAPCode) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

