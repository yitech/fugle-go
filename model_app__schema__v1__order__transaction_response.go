/*
FastAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fuglego

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AppSchemaV1OrderTransactionResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppSchemaV1OrderTransactionResponse{}

// AppSchemaV1OrderTransactionResponse struct for AppSchemaV1OrderTransactionResponse
type AppSchemaV1OrderTransactionResponse struct {
	BuySell string `json:"buy_sell"`
	CDate string `json:"c_date"`
	Cost int32 `json:"cost"`
	Make int32 `json:"make"`
	MakePer float32 `json:"make_per"`
	MatDats []MatDetail `json:"mat_dats"`
	PriceAvg string `json:"price_avg"`
	PriceQty string `json:"price_qty"`
	Qty string `json:"qty"`
	Recv int32 `json:"recv"`
	SType string `json:"s_type"`
	StkNa string `json:"stk_na"`
	StkNo string `json:"stk_no"`
	TDate string `json:"t_date"`
	Trade int32 `json:"trade"`
}

type _AppSchemaV1OrderTransactionResponse AppSchemaV1OrderTransactionResponse

// NewAppSchemaV1OrderTransactionResponse instantiates a new AppSchemaV1OrderTransactionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppSchemaV1OrderTransactionResponse(buySell string, cDate string, cost int32, make int32, makePer float32, matDats []MatDetail, priceAvg string, priceQty string, qty string, recv int32, sType string, stkNa string, stkNo string, tDate string, trade int32) *AppSchemaV1OrderTransactionResponse {
	this := AppSchemaV1OrderTransactionResponse{}
	this.BuySell = buySell
	this.CDate = cDate
	this.Cost = cost
	this.Make = make
	this.MakePer = makePer
	this.MatDats = matDats
	this.PriceAvg = priceAvg
	this.PriceQty = priceQty
	this.Qty = qty
	this.Recv = recv
	this.SType = sType
	this.StkNa = stkNa
	this.StkNo = stkNo
	this.TDate = tDate
	this.Trade = trade
	return &this
}

// NewAppSchemaV1OrderTransactionResponseWithDefaults instantiates a new AppSchemaV1OrderTransactionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppSchemaV1OrderTransactionResponseWithDefaults() *AppSchemaV1OrderTransactionResponse {
	this := AppSchemaV1OrderTransactionResponse{}
	return &this
}

// GetBuySell returns the BuySell field value
func (o *AppSchemaV1OrderTransactionResponse) GetBuySell() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BuySell
}

// GetBuySellOk returns a tuple with the BuySell field value
// and a boolean to check if the value has been set.
func (o *AppSchemaV1OrderTransactionResponse) GetBuySellOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BuySell, true
}

// SetBuySell sets field value
func (o *AppSchemaV1OrderTransactionResponse) SetBuySell(v string) {
	o.BuySell = v
}

// GetCDate returns the CDate field value
func (o *AppSchemaV1OrderTransactionResponse) GetCDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CDate
}

// GetCDateOk returns a tuple with the CDate field value
// and a boolean to check if the value has been set.
func (o *AppSchemaV1OrderTransactionResponse) GetCDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CDate, true
}

// SetCDate sets field value
func (o *AppSchemaV1OrderTransactionResponse) SetCDate(v string) {
	o.CDate = v
}

// GetCost returns the Cost field value
func (o *AppSchemaV1OrderTransactionResponse) GetCost() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Cost
}

// GetCostOk returns a tuple with the Cost field value
// and a boolean to check if the value has been set.
func (o *AppSchemaV1OrderTransactionResponse) GetCostOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cost, true
}

// SetCost sets field value
func (o *AppSchemaV1OrderTransactionResponse) SetCost(v int32) {
	o.Cost = v
}

// GetMake returns the Make field value
func (o *AppSchemaV1OrderTransactionResponse) GetMake() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Make
}

// GetMakeOk returns a tuple with the Make field value
// and a boolean to check if the value has been set.
func (o *AppSchemaV1OrderTransactionResponse) GetMakeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Make, true
}

// SetMake sets field value
func (o *AppSchemaV1OrderTransactionResponse) SetMake(v int32) {
	o.Make = v
}

// GetMakePer returns the MakePer field value
func (o *AppSchemaV1OrderTransactionResponse) GetMakePer() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.MakePer
}

// GetMakePerOk returns a tuple with the MakePer field value
// and a boolean to check if the value has been set.
func (o *AppSchemaV1OrderTransactionResponse) GetMakePerOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MakePer, true
}

// SetMakePer sets field value
func (o *AppSchemaV1OrderTransactionResponse) SetMakePer(v float32) {
	o.MakePer = v
}

// GetMatDats returns the MatDats field value
func (o *AppSchemaV1OrderTransactionResponse) GetMatDats() []MatDetail {
	if o == nil {
		var ret []MatDetail
		return ret
	}

	return o.MatDats
}

// GetMatDatsOk returns a tuple with the MatDats field value
// and a boolean to check if the value has been set.
func (o *AppSchemaV1OrderTransactionResponse) GetMatDatsOk() ([]MatDetail, bool) {
	if o == nil {
		return nil, false
	}
	return o.MatDats, true
}

// SetMatDats sets field value
func (o *AppSchemaV1OrderTransactionResponse) SetMatDats(v []MatDetail) {
	o.MatDats = v
}

// GetPriceAvg returns the PriceAvg field value
func (o *AppSchemaV1OrderTransactionResponse) GetPriceAvg() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PriceAvg
}

// GetPriceAvgOk returns a tuple with the PriceAvg field value
// and a boolean to check if the value has been set.
func (o *AppSchemaV1OrderTransactionResponse) GetPriceAvgOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PriceAvg, true
}

// SetPriceAvg sets field value
func (o *AppSchemaV1OrderTransactionResponse) SetPriceAvg(v string) {
	o.PriceAvg = v
}

// GetPriceQty returns the PriceQty field value
func (o *AppSchemaV1OrderTransactionResponse) GetPriceQty() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PriceQty
}

// GetPriceQtyOk returns a tuple with the PriceQty field value
// and a boolean to check if the value has been set.
func (o *AppSchemaV1OrderTransactionResponse) GetPriceQtyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PriceQty, true
}

// SetPriceQty sets field value
func (o *AppSchemaV1OrderTransactionResponse) SetPriceQty(v string) {
	o.PriceQty = v
}

// GetQty returns the Qty field value
func (o *AppSchemaV1OrderTransactionResponse) GetQty() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Qty
}

// GetQtyOk returns a tuple with the Qty field value
// and a boolean to check if the value has been set.
func (o *AppSchemaV1OrderTransactionResponse) GetQtyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Qty, true
}

// SetQty sets field value
func (o *AppSchemaV1OrderTransactionResponse) SetQty(v string) {
	o.Qty = v
}

// GetRecv returns the Recv field value
func (o *AppSchemaV1OrderTransactionResponse) GetRecv() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Recv
}

// GetRecvOk returns a tuple with the Recv field value
// and a boolean to check if the value has been set.
func (o *AppSchemaV1OrderTransactionResponse) GetRecvOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Recv, true
}

// SetRecv sets field value
func (o *AppSchemaV1OrderTransactionResponse) SetRecv(v int32) {
	o.Recv = v
}

// GetSType returns the SType field value
func (o *AppSchemaV1OrderTransactionResponse) GetSType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SType
}

// GetSTypeOk returns a tuple with the SType field value
// and a boolean to check if the value has been set.
func (o *AppSchemaV1OrderTransactionResponse) GetSTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SType, true
}

// SetSType sets field value
func (o *AppSchemaV1OrderTransactionResponse) SetSType(v string) {
	o.SType = v
}

// GetStkNa returns the StkNa field value
func (o *AppSchemaV1OrderTransactionResponse) GetStkNa() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StkNa
}

// GetStkNaOk returns a tuple with the StkNa field value
// and a boolean to check if the value has been set.
func (o *AppSchemaV1OrderTransactionResponse) GetStkNaOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StkNa, true
}

// SetStkNa sets field value
func (o *AppSchemaV1OrderTransactionResponse) SetStkNa(v string) {
	o.StkNa = v
}

// GetStkNo returns the StkNo field value
func (o *AppSchemaV1OrderTransactionResponse) GetStkNo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StkNo
}

// GetStkNoOk returns a tuple with the StkNo field value
// and a boolean to check if the value has been set.
func (o *AppSchemaV1OrderTransactionResponse) GetStkNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StkNo, true
}

// SetStkNo sets field value
func (o *AppSchemaV1OrderTransactionResponse) SetStkNo(v string) {
	o.StkNo = v
}

// GetTDate returns the TDate field value
func (o *AppSchemaV1OrderTransactionResponse) GetTDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TDate
}

// GetTDateOk returns a tuple with the TDate field value
// and a boolean to check if the value has been set.
func (o *AppSchemaV1OrderTransactionResponse) GetTDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TDate, true
}

// SetTDate sets field value
func (o *AppSchemaV1OrderTransactionResponse) SetTDate(v string) {
	o.TDate = v
}

// GetTrade returns the Trade field value
func (o *AppSchemaV1OrderTransactionResponse) GetTrade() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Trade
}

// GetTradeOk returns a tuple with the Trade field value
// and a boolean to check if the value has been set.
func (o *AppSchemaV1OrderTransactionResponse) GetTradeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Trade, true
}

// SetTrade sets field value
func (o *AppSchemaV1OrderTransactionResponse) SetTrade(v int32) {
	o.Trade = v
}

func (o AppSchemaV1OrderTransactionResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppSchemaV1OrderTransactionResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["buy_sell"] = o.BuySell
	toSerialize["c_date"] = o.CDate
	toSerialize["cost"] = o.Cost
	toSerialize["make"] = o.Make
	toSerialize["make_per"] = o.MakePer
	toSerialize["mat_dats"] = o.MatDats
	toSerialize["price_avg"] = o.PriceAvg
	toSerialize["price_qty"] = o.PriceQty
	toSerialize["qty"] = o.Qty
	toSerialize["recv"] = o.Recv
	toSerialize["s_type"] = o.SType
	toSerialize["stk_na"] = o.StkNa
	toSerialize["stk_no"] = o.StkNo
	toSerialize["t_date"] = o.TDate
	toSerialize["trade"] = o.Trade
	return toSerialize, nil
}

func (o *AppSchemaV1OrderTransactionResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"buy_sell",
		"c_date",
		"cost",
		"make",
		"make_per",
		"mat_dats",
		"price_avg",
		"price_qty",
		"qty",
		"recv",
		"s_type",
		"stk_na",
		"stk_no",
		"t_date",
		"trade",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAppSchemaV1OrderTransactionResponse := _AppSchemaV1OrderTransactionResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAppSchemaV1OrderTransactionResponse)

	if err != nil {
		return err
	}

	*o = AppSchemaV1OrderTransactionResponse(varAppSchemaV1OrderTransactionResponse)

	return err
}

type NullableAppSchemaV1OrderTransactionResponse struct {
	value *AppSchemaV1OrderTransactionResponse
	isSet bool
}

func (v NullableAppSchemaV1OrderTransactionResponse) Get() *AppSchemaV1OrderTransactionResponse {
	return v.value
}

func (v *NullableAppSchemaV1OrderTransactionResponse) Set(val *AppSchemaV1OrderTransactionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAppSchemaV1OrderTransactionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAppSchemaV1OrderTransactionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppSchemaV1OrderTransactionResponse(val *AppSchemaV1OrderTransactionResponse) *NullableAppSchemaV1OrderTransactionResponse {
	return &NullableAppSchemaV1OrderTransactionResponse{value: val, isSet: true}
}

func (v NullableAppSchemaV1OrderTransactionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppSchemaV1OrderTransactionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


