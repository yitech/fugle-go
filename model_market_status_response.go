/*
FastAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the MarketStatusResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MarketStatusResponse{}

// MarketStatusResponse struct for MarketStatusResponse
type MarketStatusResponse struct {
	IsTradingDay bool `json:"is_trading_day"`
	LastTradingDay string `json:"last_trading_day"`
	NextTradingDay string `json:"next_trading_day"`
}

type _MarketStatusResponse MarketStatusResponse

// NewMarketStatusResponse instantiates a new MarketStatusResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMarketStatusResponse(isTradingDay bool, lastTradingDay string, nextTradingDay string) *MarketStatusResponse {
	this := MarketStatusResponse{}
	this.IsTradingDay = isTradingDay
	this.LastTradingDay = lastTradingDay
	this.NextTradingDay = nextTradingDay
	return &this
}

// NewMarketStatusResponseWithDefaults instantiates a new MarketStatusResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMarketStatusResponseWithDefaults() *MarketStatusResponse {
	this := MarketStatusResponse{}
	return &this
}

// GetIsTradingDay returns the IsTradingDay field value
func (o *MarketStatusResponse) GetIsTradingDay() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsTradingDay
}

// GetIsTradingDayOk returns a tuple with the IsTradingDay field value
// and a boolean to check if the value has been set.
func (o *MarketStatusResponse) GetIsTradingDayOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsTradingDay, true
}

// SetIsTradingDay sets field value
func (o *MarketStatusResponse) SetIsTradingDay(v bool) {
	o.IsTradingDay = v
}

// GetLastTradingDay returns the LastTradingDay field value
func (o *MarketStatusResponse) GetLastTradingDay() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LastTradingDay
}

// GetLastTradingDayOk returns a tuple with the LastTradingDay field value
// and a boolean to check if the value has been set.
func (o *MarketStatusResponse) GetLastTradingDayOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastTradingDay, true
}

// SetLastTradingDay sets field value
func (o *MarketStatusResponse) SetLastTradingDay(v string) {
	o.LastTradingDay = v
}

// GetNextTradingDay returns the NextTradingDay field value
func (o *MarketStatusResponse) GetNextTradingDay() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NextTradingDay
}

// GetNextTradingDayOk returns a tuple with the NextTradingDay field value
// and a boolean to check if the value has been set.
func (o *MarketStatusResponse) GetNextTradingDayOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NextTradingDay, true
}

// SetNextTradingDay sets field value
func (o *MarketStatusResponse) SetNextTradingDay(v string) {
	o.NextTradingDay = v
}

func (o MarketStatusResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MarketStatusResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["is_trading_day"] = o.IsTradingDay
	toSerialize["last_trading_day"] = o.LastTradingDay
	toSerialize["next_trading_day"] = o.NextTradingDay
	return toSerialize, nil
}

func (o *MarketStatusResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"is_trading_day",
		"last_trading_day",
		"next_trading_day",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMarketStatusResponse := _MarketStatusResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMarketStatusResponse)

	if err != nil {
		return err
	}

	*o = MarketStatusResponse(varMarketStatusResponse)

	return err
}

type NullableMarketStatusResponse struct {
	value *MarketStatusResponse
	isSet bool
}

func (v NullableMarketStatusResponse) Get() *MarketStatusResponse {
	return v.value
}

func (v *NullableMarketStatusResponse) Set(val *MarketStatusResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableMarketStatusResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableMarketStatusResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMarketStatusResponse(val *MarketStatusResponse) *NullableMarketStatusResponse {
	return &NullableMarketStatusResponse{value: val, isSet: true}
}

func (v NullableMarketStatusResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMarketStatusResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


