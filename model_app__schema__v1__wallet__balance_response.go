/*
FastAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fuglego

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AppSchemaV1WalletBalanceResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppSchemaV1WalletBalanceResponse{}

// AppSchemaV1WalletBalanceResponse struct for AppSchemaV1WalletBalanceResponse
type AppSchemaV1WalletBalanceResponse struct {
	AvailableBalance int32 `json:"available_balance"`
	ExchangeBalance int32 `json:"exchange_balance"`
	StockPreSaveAmount int32 `json:"stock_pre_save_amount"`
}

type _AppSchemaV1WalletBalanceResponse AppSchemaV1WalletBalanceResponse

// NewAppSchemaV1WalletBalanceResponse instantiates a new AppSchemaV1WalletBalanceResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppSchemaV1WalletBalanceResponse(availableBalance int32, exchangeBalance int32, stockPreSaveAmount int32) *AppSchemaV1WalletBalanceResponse {
	this := AppSchemaV1WalletBalanceResponse{}
	this.AvailableBalance = availableBalance
	this.ExchangeBalance = exchangeBalance
	this.StockPreSaveAmount = stockPreSaveAmount
	return &this
}

// NewAppSchemaV1WalletBalanceResponseWithDefaults instantiates a new AppSchemaV1WalletBalanceResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppSchemaV1WalletBalanceResponseWithDefaults() *AppSchemaV1WalletBalanceResponse {
	this := AppSchemaV1WalletBalanceResponse{}
	return &this
}

// GetAvailableBalance returns the AvailableBalance field value
func (o *AppSchemaV1WalletBalanceResponse) GetAvailableBalance() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AvailableBalance
}

// GetAvailableBalanceOk returns a tuple with the AvailableBalance field value
// and a boolean to check if the value has been set.
func (o *AppSchemaV1WalletBalanceResponse) GetAvailableBalanceOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AvailableBalance, true
}

// SetAvailableBalance sets field value
func (o *AppSchemaV1WalletBalanceResponse) SetAvailableBalance(v int32) {
	o.AvailableBalance = v
}

// GetExchangeBalance returns the ExchangeBalance field value
func (o *AppSchemaV1WalletBalanceResponse) GetExchangeBalance() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ExchangeBalance
}

// GetExchangeBalanceOk returns a tuple with the ExchangeBalance field value
// and a boolean to check if the value has been set.
func (o *AppSchemaV1WalletBalanceResponse) GetExchangeBalanceOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExchangeBalance, true
}

// SetExchangeBalance sets field value
func (o *AppSchemaV1WalletBalanceResponse) SetExchangeBalance(v int32) {
	o.ExchangeBalance = v
}

// GetStockPreSaveAmount returns the StockPreSaveAmount field value
func (o *AppSchemaV1WalletBalanceResponse) GetStockPreSaveAmount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.StockPreSaveAmount
}

// GetStockPreSaveAmountOk returns a tuple with the StockPreSaveAmount field value
// and a boolean to check if the value has been set.
func (o *AppSchemaV1WalletBalanceResponse) GetStockPreSaveAmountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StockPreSaveAmount, true
}

// SetStockPreSaveAmount sets field value
func (o *AppSchemaV1WalletBalanceResponse) SetStockPreSaveAmount(v int32) {
	o.StockPreSaveAmount = v
}

func (o AppSchemaV1WalletBalanceResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppSchemaV1WalletBalanceResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["available_balance"] = o.AvailableBalance
	toSerialize["exchange_balance"] = o.ExchangeBalance
	toSerialize["stock_pre_save_amount"] = o.StockPreSaveAmount
	return toSerialize, nil
}

func (o *AppSchemaV1WalletBalanceResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"available_balance",
		"exchange_balance",
		"stock_pre_save_amount",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAppSchemaV1WalletBalanceResponse := _AppSchemaV1WalletBalanceResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAppSchemaV1WalletBalanceResponse)

	if err != nil {
		return err
	}

	*o = AppSchemaV1WalletBalanceResponse(varAppSchemaV1WalletBalanceResponse)

	return err
}

type NullableAppSchemaV1WalletBalanceResponse struct {
	value *AppSchemaV1WalletBalanceResponse
	isSet bool
}

func (v NullableAppSchemaV1WalletBalanceResponse) Get() *AppSchemaV1WalletBalanceResponse {
	return v.value
}

func (v *NullableAppSchemaV1WalletBalanceResponse) Set(val *AppSchemaV1WalletBalanceResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAppSchemaV1WalletBalanceResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAppSchemaV1WalletBalanceResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppSchemaV1WalletBalanceResponse(val *AppSchemaV1WalletBalanceResponse) *NullableAppSchemaV1WalletBalanceResponse {
	return &NullableAppSchemaV1WalletBalanceResponse{value: val, isSet: true}
}

func (v NullableAppSchemaV1WalletBalanceResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppSchemaV1WalletBalanceResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


