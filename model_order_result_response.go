/*
FastAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fugle-go

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the OrderResultResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrderResultResponse{}

// OrderResultResponse struct for OrderResultResponse
type OrderResultResponse struct {
	ApCode APCode `json:"ap_code"`
	AvgPrice float32 `json:"avg_price"`
	BsFlag BSFlag `json:"bs_flag"`
	BuySell Action `json:"buy_sell"`
	CelQty float32 `json:"cel_qty"`
	CelQtyShare int32 `json:"cel_qty_share"`
	Celable string `json:"celable"`
	ErrCode string `json:"err_code"`
	ErrMsg string `json:"err_msg"`
	MatQty float32 `json:"mat_qty"`
	MatQtyShare int32 `json:"mat_qty_share"`
	OdPrice float32 `json:"od_price"`
	OrdDate string `json:"ord_date"`
	OrdNo string `json:"ord_no"`
	OrdStatus string `json:"ord_status"`
	OrdTime string `json:"ord_time"`
	OrgQty float32 `json:"org_qty"`
	OrgQtyShare int32 `json:"org_qty_share"`
	PreOrdNo string `json:"pre_ord_no"`
	PriceFlag PriceFlag `json:"price_flag"`
	StockNo string `json:"stock_no"`
	Trade Trade `json:"trade"`
	WorkDate string `json:"work_date"`
	UserDef *string `json:"user_def,omitempty"`
}

type _OrderResultResponse OrderResultResponse

// NewOrderResultResponse instantiates a new OrderResultResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderResultResponse(apCode APCode, avgPrice float32, bsFlag BSFlag, buySell Action, celQty float32, celQtyShare int32, celable string, errCode string, errMsg string, matQty float32, matQtyShare int32, odPrice float32, ordDate string, ordNo string, ordStatus string, ordTime string, orgQty float32, orgQtyShare int32, preOrdNo string, priceFlag PriceFlag, stockNo string, trade Trade, workDate string) *OrderResultResponse {
	this := OrderResultResponse{}
	this.ApCode = apCode
	this.AvgPrice = avgPrice
	this.BsFlag = bsFlag
	this.BuySell = buySell
	this.CelQty = celQty
	this.CelQtyShare = celQtyShare
	this.Celable = celable
	this.ErrCode = errCode
	this.ErrMsg = errMsg
	this.MatQty = matQty
	this.MatQtyShare = matQtyShare
	this.OdPrice = odPrice
	this.OrdDate = ordDate
	this.OrdNo = ordNo
	this.OrdStatus = ordStatus
	this.OrdTime = ordTime
	this.OrgQty = orgQty
	this.OrgQtyShare = orgQtyShare
	this.PreOrdNo = preOrdNo
	this.PriceFlag = priceFlag
	this.StockNo = stockNo
	this.Trade = trade
	this.WorkDate = workDate
	var userDef string = ""
	this.UserDef = &userDef
	return &this
}

// NewOrderResultResponseWithDefaults instantiates a new OrderResultResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderResultResponseWithDefaults() *OrderResultResponse {
	this := OrderResultResponse{}
	var userDef string = ""
	this.UserDef = &userDef
	return &this
}

// GetApCode returns the ApCode field value
func (o *OrderResultResponse) GetApCode() APCode {
	if o == nil {
		var ret APCode
		return ret
	}

	return o.ApCode
}

// GetApCodeOk returns a tuple with the ApCode field value
// and a boolean to check if the value has been set.
func (o *OrderResultResponse) GetApCodeOk() (*APCode, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApCode, true
}

// SetApCode sets field value
func (o *OrderResultResponse) SetApCode(v APCode) {
	o.ApCode = v
}

// GetAvgPrice returns the AvgPrice field value
func (o *OrderResultResponse) GetAvgPrice() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.AvgPrice
}

// GetAvgPriceOk returns a tuple with the AvgPrice field value
// and a boolean to check if the value has been set.
func (o *OrderResultResponse) GetAvgPriceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AvgPrice, true
}

// SetAvgPrice sets field value
func (o *OrderResultResponse) SetAvgPrice(v float32) {
	o.AvgPrice = v
}

// GetBsFlag returns the BsFlag field value
func (o *OrderResultResponse) GetBsFlag() BSFlag {
	if o == nil {
		var ret BSFlag
		return ret
	}

	return o.BsFlag
}

// GetBsFlagOk returns a tuple with the BsFlag field value
// and a boolean to check if the value has been set.
func (o *OrderResultResponse) GetBsFlagOk() (*BSFlag, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BsFlag, true
}

// SetBsFlag sets field value
func (o *OrderResultResponse) SetBsFlag(v BSFlag) {
	o.BsFlag = v
}

// GetBuySell returns the BuySell field value
func (o *OrderResultResponse) GetBuySell() Action {
	if o == nil {
		var ret Action
		return ret
	}

	return o.BuySell
}

// GetBuySellOk returns a tuple with the BuySell field value
// and a boolean to check if the value has been set.
func (o *OrderResultResponse) GetBuySellOk() (*Action, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BuySell, true
}

// SetBuySell sets field value
func (o *OrderResultResponse) SetBuySell(v Action) {
	o.BuySell = v
}

// GetCelQty returns the CelQty field value
func (o *OrderResultResponse) GetCelQty() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.CelQty
}

// GetCelQtyOk returns a tuple with the CelQty field value
// and a boolean to check if the value has been set.
func (o *OrderResultResponse) GetCelQtyOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CelQty, true
}

// SetCelQty sets field value
func (o *OrderResultResponse) SetCelQty(v float32) {
	o.CelQty = v
}

// GetCelQtyShare returns the CelQtyShare field value
func (o *OrderResultResponse) GetCelQtyShare() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CelQtyShare
}

// GetCelQtyShareOk returns a tuple with the CelQtyShare field value
// and a boolean to check if the value has been set.
func (o *OrderResultResponse) GetCelQtyShareOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CelQtyShare, true
}

// SetCelQtyShare sets field value
func (o *OrderResultResponse) SetCelQtyShare(v int32) {
	o.CelQtyShare = v
}

// GetCelable returns the Celable field value
func (o *OrderResultResponse) GetCelable() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Celable
}

// GetCelableOk returns a tuple with the Celable field value
// and a boolean to check if the value has been set.
func (o *OrderResultResponse) GetCelableOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Celable, true
}

// SetCelable sets field value
func (o *OrderResultResponse) SetCelable(v string) {
	o.Celable = v
}

// GetErrCode returns the ErrCode field value
func (o *OrderResultResponse) GetErrCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ErrCode
}

// GetErrCodeOk returns a tuple with the ErrCode field value
// and a boolean to check if the value has been set.
func (o *OrderResultResponse) GetErrCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ErrCode, true
}

// SetErrCode sets field value
func (o *OrderResultResponse) SetErrCode(v string) {
	o.ErrCode = v
}

// GetErrMsg returns the ErrMsg field value
func (o *OrderResultResponse) GetErrMsg() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ErrMsg
}

// GetErrMsgOk returns a tuple with the ErrMsg field value
// and a boolean to check if the value has been set.
func (o *OrderResultResponse) GetErrMsgOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ErrMsg, true
}

// SetErrMsg sets field value
func (o *OrderResultResponse) SetErrMsg(v string) {
	o.ErrMsg = v
}

// GetMatQty returns the MatQty field value
func (o *OrderResultResponse) GetMatQty() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.MatQty
}

// GetMatQtyOk returns a tuple with the MatQty field value
// and a boolean to check if the value has been set.
func (o *OrderResultResponse) GetMatQtyOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MatQty, true
}

// SetMatQty sets field value
func (o *OrderResultResponse) SetMatQty(v float32) {
	o.MatQty = v
}

// GetMatQtyShare returns the MatQtyShare field value
func (o *OrderResultResponse) GetMatQtyShare() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MatQtyShare
}

// GetMatQtyShareOk returns a tuple with the MatQtyShare field value
// and a boolean to check if the value has been set.
func (o *OrderResultResponse) GetMatQtyShareOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MatQtyShare, true
}

// SetMatQtyShare sets field value
func (o *OrderResultResponse) SetMatQtyShare(v int32) {
	o.MatQtyShare = v
}

// GetOdPrice returns the OdPrice field value
func (o *OrderResultResponse) GetOdPrice() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.OdPrice
}

// GetOdPriceOk returns a tuple with the OdPrice field value
// and a boolean to check if the value has been set.
func (o *OrderResultResponse) GetOdPriceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OdPrice, true
}

// SetOdPrice sets field value
func (o *OrderResultResponse) SetOdPrice(v float32) {
	o.OdPrice = v
}

// GetOrdDate returns the OrdDate field value
func (o *OrderResultResponse) GetOrdDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrdDate
}

// GetOrdDateOk returns a tuple with the OrdDate field value
// and a boolean to check if the value has been set.
func (o *OrderResultResponse) GetOrdDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrdDate, true
}

// SetOrdDate sets field value
func (o *OrderResultResponse) SetOrdDate(v string) {
	o.OrdDate = v
}

// GetOrdNo returns the OrdNo field value
func (o *OrderResultResponse) GetOrdNo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrdNo
}

// GetOrdNoOk returns a tuple with the OrdNo field value
// and a boolean to check if the value has been set.
func (o *OrderResultResponse) GetOrdNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrdNo, true
}

// SetOrdNo sets field value
func (o *OrderResultResponse) SetOrdNo(v string) {
	o.OrdNo = v
}

// GetOrdStatus returns the OrdStatus field value
func (o *OrderResultResponse) GetOrdStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrdStatus
}

// GetOrdStatusOk returns a tuple with the OrdStatus field value
// and a boolean to check if the value has been set.
func (o *OrderResultResponse) GetOrdStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrdStatus, true
}

// SetOrdStatus sets field value
func (o *OrderResultResponse) SetOrdStatus(v string) {
	o.OrdStatus = v
}

// GetOrdTime returns the OrdTime field value
func (o *OrderResultResponse) GetOrdTime() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrdTime
}

// GetOrdTimeOk returns a tuple with the OrdTime field value
// and a boolean to check if the value has been set.
func (o *OrderResultResponse) GetOrdTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrdTime, true
}

// SetOrdTime sets field value
func (o *OrderResultResponse) SetOrdTime(v string) {
	o.OrdTime = v
}

// GetOrgQty returns the OrgQty field value
func (o *OrderResultResponse) GetOrgQty() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.OrgQty
}

// GetOrgQtyOk returns a tuple with the OrgQty field value
// and a boolean to check if the value has been set.
func (o *OrderResultResponse) GetOrgQtyOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrgQty, true
}

// SetOrgQty sets field value
func (o *OrderResultResponse) SetOrgQty(v float32) {
	o.OrgQty = v
}

// GetOrgQtyShare returns the OrgQtyShare field value
func (o *OrderResultResponse) GetOrgQtyShare() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.OrgQtyShare
}

// GetOrgQtyShareOk returns a tuple with the OrgQtyShare field value
// and a boolean to check if the value has been set.
func (o *OrderResultResponse) GetOrgQtyShareOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrgQtyShare, true
}

// SetOrgQtyShare sets field value
func (o *OrderResultResponse) SetOrgQtyShare(v int32) {
	o.OrgQtyShare = v
}

// GetPreOrdNo returns the PreOrdNo field value
func (o *OrderResultResponse) GetPreOrdNo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PreOrdNo
}

// GetPreOrdNoOk returns a tuple with the PreOrdNo field value
// and a boolean to check if the value has been set.
func (o *OrderResultResponse) GetPreOrdNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PreOrdNo, true
}

// SetPreOrdNo sets field value
func (o *OrderResultResponse) SetPreOrdNo(v string) {
	o.PreOrdNo = v
}

// GetPriceFlag returns the PriceFlag field value
func (o *OrderResultResponse) GetPriceFlag() PriceFlag {
	if o == nil {
		var ret PriceFlag
		return ret
	}

	return o.PriceFlag
}

// GetPriceFlagOk returns a tuple with the PriceFlag field value
// and a boolean to check if the value has been set.
func (o *OrderResultResponse) GetPriceFlagOk() (*PriceFlag, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PriceFlag, true
}

// SetPriceFlag sets field value
func (o *OrderResultResponse) SetPriceFlag(v PriceFlag) {
	o.PriceFlag = v
}

// GetStockNo returns the StockNo field value
func (o *OrderResultResponse) GetStockNo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StockNo
}

// GetStockNoOk returns a tuple with the StockNo field value
// and a boolean to check if the value has been set.
func (o *OrderResultResponse) GetStockNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StockNo, true
}

// SetStockNo sets field value
func (o *OrderResultResponse) SetStockNo(v string) {
	o.StockNo = v
}

// GetTrade returns the Trade field value
func (o *OrderResultResponse) GetTrade() Trade {
	if o == nil {
		var ret Trade
		return ret
	}

	return o.Trade
}

// GetTradeOk returns a tuple with the Trade field value
// and a boolean to check if the value has been set.
func (o *OrderResultResponse) GetTradeOk() (*Trade, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Trade, true
}

// SetTrade sets field value
func (o *OrderResultResponse) SetTrade(v Trade) {
	o.Trade = v
}

// GetWorkDate returns the WorkDate field value
func (o *OrderResultResponse) GetWorkDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WorkDate
}

// GetWorkDateOk returns a tuple with the WorkDate field value
// and a boolean to check if the value has been set.
func (o *OrderResultResponse) GetWorkDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WorkDate, true
}

// SetWorkDate sets field value
func (o *OrderResultResponse) SetWorkDate(v string) {
	o.WorkDate = v
}

// GetUserDef returns the UserDef field value if set, zero value otherwise.
func (o *OrderResultResponse) GetUserDef() string {
	if o == nil || IsNil(o.UserDef) {
		var ret string
		return ret
	}
	return *o.UserDef
}

// GetUserDefOk returns a tuple with the UserDef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderResultResponse) GetUserDefOk() (*string, bool) {
	if o == nil || IsNil(o.UserDef) {
		return nil, false
	}
	return o.UserDef, true
}

// HasUserDef returns a boolean if a field has been set.
func (o *OrderResultResponse) HasUserDef() bool {
	if o != nil && !IsNil(o.UserDef) {
		return true
	}

	return false
}

// SetUserDef gets a reference to the given string and assigns it to the UserDef field.
func (o *OrderResultResponse) SetUserDef(v string) {
	o.UserDef = &v
}

func (o OrderResultResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrderResultResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ap_code"] = o.ApCode
	toSerialize["avg_price"] = o.AvgPrice
	toSerialize["bs_flag"] = o.BsFlag
	toSerialize["buy_sell"] = o.BuySell
	toSerialize["cel_qty"] = o.CelQty
	toSerialize["cel_qty_share"] = o.CelQtyShare
	toSerialize["celable"] = o.Celable
	toSerialize["err_code"] = o.ErrCode
	toSerialize["err_msg"] = o.ErrMsg
	toSerialize["mat_qty"] = o.MatQty
	toSerialize["mat_qty_share"] = o.MatQtyShare
	toSerialize["od_price"] = o.OdPrice
	toSerialize["ord_date"] = o.OrdDate
	toSerialize["ord_no"] = o.OrdNo
	toSerialize["ord_status"] = o.OrdStatus
	toSerialize["ord_time"] = o.OrdTime
	toSerialize["org_qty"] = o.OrgQty
	toSerialize["org_qty_share"] = o.OrgQtyShare
	toSerialize["pre_ord_no"] = o.PreOrdNo
	toSerialize["price_flag"] = o.PriceFlag
	toSerialize["stock_no"] = o.StockNo
	toSerialize["trade"] = o.Trade
	toSerialize["work_date"] = o.WorkDate
	if !IsNil(o.UserDef) {
		toSerialize["user_def"] = o.UserDef
	}
	return toSerialize, nil
}

func (o *OrderResultResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"ap_code",
		"avg_price",
		"bs_flag",
		"buy_sell",
		"cel_qty",
		"cel_qty_share",
		"celable",
		"err_code",
		"err_msg",
		"mat_qty",
		"mat_qty_share",
		"od_price",
		"ord_date",
		"ord_no",
		"ord_status",
		"ord_time",
		"org_qty",
		"org_qty_share",
		"pre_ord_no",
		"price_flag",
		"stock_no",
		"trade",
		"work_date",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOrderResultResponse := _OrderResultResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOrderResultResponse)

	if err != nil {
		return err
	}

	*o = OrderResultResponse(varOrderResultResponse)

	return err
}

type NullableOrderResultResponse struct {
	value *OrderResultResponse
	isSet bool
}

func (v NullableOrderResultResponse) Get() *OrderResultResponse {
	return v.value
}

func (v *NullableOrderResultResponse) Set(val *OrderResultResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderResultResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderResultResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderResultResponse(val *OrderResultResponse) *NullableOrderResultResponse {
	return &NullableOrderResultResponse{value: val, isSet: true}
}

func (v NullableOrderResultResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderResultResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


