/*
FastAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fuglego

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the AppSchemaV2TradeTransactionResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppSchemaV2TradeTransactionResponse{}

// AppSchemaV2TradeTransactionResponse struct for AppSchemaV2TradeTransactionResponse
type AppSchemaV2TradeTransactionResponse struct {
	Side string `json:"side"`
	Datetime time.Time `json:"datetime"`
	Fee int32 `json:"fee"`
	OrderNo string `json:"order_no"`
	Price float32 `json:"price"`
	Qty int32 `json:"qty"`
	StkNo string `json:"stk_no"`
	Tax int32 `json:"tax"`
	Trade int32 `json:"trade"`
}

type _AppSchemaV2TradeTransactionResponse AppSchemaV2TradeTransactionResponse

// NewAppSchemaV2TradeTransactionResponse instantiates a new AppSchemaV2TradeTransactionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppSchemaV2TradeTransactionResponse(side string, datetime time.Time, fee int32, orderNo string, price float32, qty int32, stkNo string, tax int32, trade int32) *AppSchemaV2TradeTransactionResponse {
	this := AppSchemaV2TradeTransactionResponse{}
	this.Side = side
	this.Datetime = datetime
	this.Fee = fee
	this.OrderNo = orderNo
	this.Price = price
	this.Qty = qty
	this.StkNo = stkNo
	this.Tax = tax
	this.Trade = trade
	return &this
}

// NewAppSchemaV2TradeTransactionResponseWithDefaults instantiates a new AppSchemaV2TradeTransactionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppSchemaV2TradeTransactionResponseWithDefaults() *AppSchemaV2TradeTransactionResponse {
	this := AppSchemaV2TradeTransactionResponse{}
	return &this
}

// GetSide returns the Side field value
func (o *AppSchemaV2TradeTransactionResponse) GetSide() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Side
}

// GetSideOk returns a tuple with the Side field value
// and a boolean to check if the value has been set.
func (o *AppSchemaV2TradeTransactionResponse) GetSideOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Side, true
}

// SetSide sets field value
func (o *AppSchemaV2TradeTransactionResponse) SetSide(v string) {
	o.Side = v
}

// GetDatetime returns the Datetime field value
func (o *AppSchemaV2TradeTransactionResponse) GetDatetime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Datetime
}

// GetDatetimeOk returns a tuple with the Datetime field value
// and a boolean to check if the value has been set.
func (o *AppSchemaV2TradeTransactionResponse) GetDatetimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Datetime, true
}

// SetDatetime sets field value
func (o *AppSchemaV2TradeTransactionResponse) SetDatetime(v time.Time) {
	o.Datetime = v
}

// GetFee returns the Fee field value
func (o *AppSchemaV2TradeTransactionResponse) GetFee() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Fee
}

// GetFeeOk returns a tuple with the Fee field value
// and a boolean to check if the value has been set.
func (o *AppSchemaV2TradeTransactionResponse) GetFeeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Fee, true
}

// SetFee sets field value
func (o *AppSchemaV2TradeTransactionResponse) SetFee(v int32) {
	o.Fee = v
}

// GetOrderNo returns the OrderNo field value
func (o *AppSchemaV2TradeTransactionResponse) GetOrderNo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrderNo
}

// GetOrderNoOk returns a tuple with the OrderNo field value
// and a boolean to check if the value has been set.
func (o *AppSchemaV2TradeTransactionResponse) GetOrderNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrderNo, true
}

// SetOrderNo sets field value
func (o *AppSchemaV2TradeTransactionResponse) SetOrderNo(v string) {
	o.OrderNo = v
}

// GetPrice returns the Price field value
func (o *AppSchemaV2TradeTransactionResponse) GetPrice() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Price
}

// GetPriceOk returns a tuple with the Price field value
// and a boolean to check if the value has been set.
func (o *AppSchemaV2TradeTransactionResponse) GetPriceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Price, true
}

// SetPrice sets field value
func (o *AppSchemaV2TradeTransactionResponse) SetPrice(v float32) {
	o.Price = v
}

// GetQty returns the Qty field value
func (o *AppSchemaV2TradeTransactionResponse) GetQty() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Qty
}

// GetQtyOk returns a tuple with the Qty field value
// and a boolean to check if the value has been set.
func (o *AppSchemaV2TradeTransactionResponse) GetQtyOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Qty, true
}

// SetQty sets field value
func (o *AppSchemaV2TradeTransactionResponse) SetQty(v int32) {
	o.Qty = v
}

// GetStkNo returns the StkNo field value
func (o *AppSchemaV2TradeTransactionResponse) GetStkNo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StkNo
}

// GetStkNoOk returns a tuple with the StkNo field value
// and a boolean to check if the value has been set.
func (o *AppSchemaV2TradeTransactionResponse) GetStkNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StkNo, true
}

// SetStkNo sets field value
func (o *AppSchemaV2TradeTransactionResponse) SetStkNo(v string) {
	o.StkNo = v
}

// GetTax returns the Tax field value
func (o *AppSchemaV2TradeTransactionResponse) GetTax() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Tax
}

// GetTaxOk returns a tuple with the Tax field value
// and a boolean to check if the value has been set.
func (o *AppSchemaV2TradeTransactionResponse) GetTaxOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Tax, true
}

// SetTax sets field value
func (o *AppSchemaV2TradeTransactionResponse) SetTax(v int32) {
	o.Tax = v
}

// GetTrade returns the Trade field value
func (o *AppSchemaV2TradeTransactionResponse) GetTrade() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Trade
}

// GetTradeOk returns a tuple with the Trade field value
// and a boolean to check if the value has been set.
func (o *AppSchemaV2TradeTransactionResponse) GetTradeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Trade, true
}

// SetTrade sets field value
func (o *AppSchemaV2TradeTransactionResponse) SetTrade(v int32) {
	o.Trade = v
}

func (o AppSchemaV2TradeTransactionResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppSchemaV2TradeTransactionResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["side"] = o.Side
	toSerialize["datetime"] = o.Datetime
	toSerialize["fee"] = o.Fee
	toSerialize["order_no"] = o.OrderNo
	toSerialize["price"] = o.Price
	toSerialize["qty"] = o.Qty
	toSerialize["stk_no"] = o.StkNo
	toSerialize["tax"] = o.Tax
	toSerialize["trade"] = o.Trade
	return toSerialize, nil
}

func (o *AppSchemaV2TradeTransactionResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"side",
		"datetime",
		"fee",
		"order_no",
		"price",
		"qty",
		"stk_no",
		"tax",
		"trade",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAppSchemaV2TradeTransactionResponse := _AppSchemaV2TradeTransactionResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAppSchemaV2TradeTransactionResponse)

	if err != nil {
		return err
	}

	*o = AppSchemaV2TradeTransactionResponse(varAppSchemaV2TradeTransactionResponse)

	return err
}

type NullableAppSchemaV2TradeTransactionResponse struct {
	value *AppSchemaV2TradeTransactionResponse
	isSet bool
}

func (v NullableAppSchemaV2TradeTransactionResponse) Get() *AppSchemaV2TradeTransactionResponse {
	return v.value
}

func (v *NullableAppSchemaV2TradeTransactionResponse) Set(val *AppSchemaV2TradeTransactionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAppSchemaV2TradeTransactionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAppSchemaV2TradeTransactionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppSchemaV2TradeTransactionResponse(val *AppSchemaV2TradeTransactionResponse) *NullableAppSchemaV2TradeTransactionResponse {
	return &NullableAppSchemaV2TradeTransactionResponse{value: val, isSet: true}
}

func (v NullableAppSchemaV2TradeTransactionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppSchemaV2TradeTransactionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


